{"version":3,"sources":["input/input.ts"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["import {\r\n  forwardRef,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChange,\r\n  ContentChildren,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer,\r\n  QueryList,\r\n  OnChanges,\r\n  EventEmitter,\r\n  Output,\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MdError, coerceBooleanProperty} from '../core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {MdPlaceholder, MdInputContainer, MdHint, MdInputDirective} from './input-container';\r\nimport {MdTextareaAutosize} from './autosize';\r\nimport {PlatformModule} from '../core/platform/index';\r\n\r\n\r\nconst noop = () => {};\r\n\r\n\r\nexport const MD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MdInput),\r\n  multi: true\r\n};\r\n\r\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\r\nconst MD_INPUT_INVALID_INPUT_TYPE = [\r\n  'file',\r\n  'radio',\r\n  'checkbox',\r\n];\r\n\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/** @docs-private */\r\nexport class MdInputPlaceholderConflictError extends MdError {\r\n  constructor() {\r\n    super('Placeholder attribute and child element were both specified.');\r\n  }\r\n}\r\n\r\n/** @docs-private */\r\nexport class MdInputUnsupportedTypeError extends MdError {\r\n  constructor(type: string) {\r\n    super(`Input type \"${type}\" isn't supported by md-input.`);\r\n  }\r\n}\r\n\r\n/** @docs-private */\r\nexport class MdInputDuplicatedHintError extends MdError {\r\n  constructor(align: string) {\r\n    super(`A hint was already declared for 'align=\"${align}\"'.`);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\r\n * improve on its behaviour, along with styling it according to the Material Design.\r\n * @deprecated\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-input, md-textarea',\r\n  templateUrl: 'input.html',\r\n  styleUrls: ['input.css'],\r\n  providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\r\n  host: {'(click)' : 'focus()'},\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MdInput implements ControlValueAccessor, AfterContentInit, OnChanges {\r\n  private _focused: boolean = false;\r\n  private _value: any = '';\r\n\r\n  /** Callback registered via registerOnTouched (ControlValueAccessor) */\r\n  private _onTouchedCallback: () => void = noop;\r\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\r\n  private _onChangeCallback: (_: any) => void = noop;\r\n\r\n  /**\r\n   * Aria related inputs.\r\n   */\r\n  @Input('aria-label') ariaLabel: string;\r\n  @Input('aria-labelledby') ariaLabelledBy: string;\r\n\r\n  private _ariaDisabled: boolean;\r\n  private _ariaRequired: boolean;\r\n  private _ariaInvalid: boolean;\r\n\r\n  /** Mirrors the native `aria-disabled` attribute. */\r\n  @Input('aria-disabled')\r\n  get ariaDisabled(): boolean { return this._ariaDisabled; }\r\n  set ariaDisabled(value) { this._ariaDisabled = coerceBooleanProperty(value); }\r\n\r\n  /** Mirrors the native `aria-required` attribute. */\r\n  @Input('aria-required')\r\n  get ariaRequired(): boolean { return this._ariaRequired; }\r\n  set ariaRequired(value) { this._ariaRequired = coerceBooleanProperty(value); }\r\n\r\n  /** Mirrors the native `aria-invalid` attribute. */\r\n  @Input('aria-invalid')\r\n  get ariaInvalid(): boolean { return this._ariaInvalid; }\r\n  set ariaInvalid(value) { this._ariaInvalid = coerceBooleanProperty(value); }\r\n\r\n  /**\r\n   * Content directives.\r\n   */\r\n  @ContentChild(MdPlaceholder) _placeholderChild: MdPlaceholder;\r\n  @ContentChildren(MdHint) _hintChildren: QueryList<MdHint>;\r\n\r\n  /** Readonly properties. */\r\n\r\n  /** Whether the element is focused. */\r\n  get focused() { return this._focused; }\r\n\r\n  /** Whether the element is empty. */\r\n  get empty() { return (this._value == null || this._value === '') && this.type !== 'date'; }\r\n\r\n  /** Amount of characters inside the element. */\r\n  get characterCount(): number {\r\n    return this.empty ? 0 : ('' + this._value).length;\r\n  }\r\n\r\n  /** Unique element id. */\r\n  get inputId(): string { return `${this.id}-input`; }\r\n\r\n  /** Alignment of the input container's content. */\r\n  @Input() align: 'start' | 'end' = 'start';\r\n\r\n  /** Color of the input divider, based on the theme. */\r\n  @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\r\n\r\n  /** Text for the input hint. */\r\n  @Input() hintLabel: string = '';\r\n\r\n  /** Mirrors the native `autocomplete` attribute. */\r\n  @Input() autocomplete: string;\r\n\r\n  /** Mirrors the native `autocorrect` attribute. */\r\n  @Input() autocorrect: string;\r\n\r\n  /** Mirrors the native `autocapitalize` attribute. */\r\n  @Input() autocapitalize: string;\r\n\r\n  /** Unique id for the input element. */\r\n  @Input() id: string = `md-input-${nextUniqueId++}`;\r\n\r\n  /** Mirrors the native `list` attribute. */\r\n  @Input() list: string = null;\r\n\r\n  /** Mirrors the native `max` attribute. */\r\n  @Input() max: string | number = null;\r\n\r\n  /** Mirrors the native `maxlength` attribute. */\r\n  @Input() maxlength: number = null;\r\n\r\n  /** Mirrors the native `min` attribute. */\r\n  @Input() min: string | number = null;\r\n\r\n  /** Mirrors the native `minlength` attribute. */\r\n  @Input() minlength: number = null;\r\n\r\n  /** Mirrors the native `placeholder` attribute. */\r\n  @Input() placeholder: string = null;\r\n\r\n  /** Mirrors the native `step` attribute. */\r\n  @Input() step: number = null;\r\n\r\n  /** Mirrors the native `tabindex` attribute. */\r\n  @Input() tabindex: number = null;\r\n\r\n  /** Mirrors the native `type` attribute. */\r\n  @Input() type: string = 'text';\r\n\r\n  /** Mirrors the native `name` attribute. */\r\n  @Input() name: string = null;\r\n\r\n  // textarea-specific\r\n  /** Mirrors the native `rows` attribute. */\r\n  @Input() rows: number = null;\r\n\r\n  /** Mirrors the native `cols` attribute. */\r\n  @Input() cols: number = null;\r\n\r\n  /** Whether to do a soft or hard wrap of the text.. */\r\n  @Input() wrap: 'soft' | 'hard' = null;\r\n\r\n  private _floatingPlaceholder: boolean = true;\r\n  private _autofocus: boolean = false;\r\n  private _disabled: boolean = false;\r\n  private _readonly: boolean = false;\r\n  private _required: boolean = false;\r\n  private _spellcheck: boolean = false;\r\n\r\n  /** Text for the floating placeholder. */\r\n  @Input()\r\n  get floatingPlaceholder(): boolean { return this._floatingPlaceholder; }\r\n  set floatingPlaceholder(value) { this._floatingPlaceholder = coerceBooleanProperty(value); }\r\n\r\n  /** Whether to automatically focus the input. */\r\n  @Input()\r\n  get autofocus(): boolean { return this._autofocus; }\r\n  set autofocus(value) { this._autofocus = coerceBooleanProperty(value); }\r\n\r\n  /** Whether the input is disabled. */\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n  /** Whether the input is readonly. */\r\n  @Input()\r\n  get readonly(): boolean { return this._readonly; }\r\n  set readonly(value) { this._readonly = coerceBooleanProperty(value); }\r\n\r\n  /** Whether the input is required. */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value) { this._required = coerceBooleanProperty(value); }\r\n\r\n  /** Whether spellchecking is enable on the input. */\r\n  @Input()\r\n  get spellcheck(): boolean { return this._spellcheck; }\r\n  set spellcheck(value) { this._spellcheck = coerceBooleanProperty(value); }\r\n\r\n\r\n  private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n  private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n\r\n  /** Event emitted when the input is blurred. */\r\n  @Output('blur')\r\n  get onBlur(): Observable<FocusEvent> {\r\n    return this._blurEmitter.asObservable();\r\n  }\r\n\r\n  /** Event emitted when the input is focused. */\r\n  @Output('focus')\r\n  get onFocus(): Observable<FocusEvent> {\r\n    return this._focusEmitter.asObservable();\r\n  }\r\n\r\n  /** Value of the input. */\r\n  @Input()\r\n  get value(): any { return this._value; };\r\n  set value(v: any) {\r\n    v = this._convertValueForInputType(v);\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this._onChangeCallback(v);\r\n    }\r\n  }\r\n\r\n  // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\r\n  // might place it as RTL when we don't want to. We still want to use `align` as an\r\n  // Input though, so we use HostBinding.\r\n  @HostBinding('attr.align') get _align(): any { return null; }\r\n\r\n\r\n  @ViewChild('input') _inputElement: ElementRef;\r\n\r\n  _elementType: 'input' | 'textarea';\r\n\r\n  constructor(elementRef: ElementRef, private _renderer: Renderer) {\r\n    // Set the element type depending on normalized selector used(md-input / md-textarea)\r\n    this._elementType = elementRef.nativeElement.nodeName.toLowerCase() === 'md-input' ?\r\n        'input' :\r\n        'textarea';\r\n  }\r\n\r\n  /** Set focus on input */\r\n  focus() {\r\n    this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\r\n  }\r\n\r\n  _handleFocus(event: FocusEvent) {\r\n    this._focused = true;\r\n    this._focusEmitter.emit(event);\r\n  }\r\n\r\n  _handleBlur(event: FocusEvent) {\r\n    this._focused = false;\r\n    this._onTouchedCallback();\r\n    this._blurEmitter.emit(event);\r\n  }\r\n\r\n  _handleChange(event: Event) {\r\n    this.value = (<HTMLInputElement>event.target).value;\r\n    this._onTouchedCallback();\r\n  }\r\n\r\n  _hasPlaceholder(): boolean {\r\n    return !!this.placeholder || this._placeholderChild != null;\r\n  }\r\n\r\n  /**\r\n   * Sets the model value of the input. Implemented as part of ControlValueAccessor.\r\n   * @param value Value to be set.\r\n   */\r\n  writeValue(value: any) {\r\n    this._value = value;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the input value has changed.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnChange(fn: any) {\r\n    this._onChangeCallback = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the input has been touched.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnTouched(fn: any) {\r\n    this._onTouchedCallback = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the input is disabled.\r\n   * Implemented as a part of ControlValueAccessor.\r\n   * @param isDisabled Whether the input should be disabled.\r\n   */\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._validateConstraints();\r\n\r\n    // Trigger validation when the hint children change.\r\n    this._hintChildren.changes.subscribe(() => {\r\n      this._validateConstraints();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    this._validateConstraints();\r\n  }\r\n\r\n  /**\r\n   * Convert the value passed in to a value that is expected from the type of the md-input.\r\n   * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\r\n   * on our internal input it won't work locally.\r\n   * @private\r\n   */\r\n  private _convertValueForInputType(v: any): any {\r\n    switch (this.type) {\r\n      case 'number': return parseFloat(v);\r\n      default: return v;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\r\n   * Constraints for now:\r\n   *   - placeholder attribute and <md-placeholder> are mutually exclusive.\r\n   *   - type attribute is not one of the forbidden types (see constant at the top).\r\n   *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\r\n   *     considered as align=\"start\".\r\n   * @private\r\n   */\r\n  private _validateConstraints() {\r\n    if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\r\n      throw new MdInputPlaceholderConflictError();\r\n    }\r\n    if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\r\n      throw new MdInputUnsupportedTypeError(this.type);\r\n    }\r\n\r\n    if (this._hintChildren) {\r\n      // Validate the hint labels.\r\n      let startHint: MdHint = null;\r\n      let endHint: MdHint = null;\r\n      this._hintChildren.forEach((hint: MdHint) => {\r\n        if (hint.align == 'start') {\r\n          if (startHint || this.hintLabel) {\r\n            throw new MdInputDuplicatedHintError('start');\r\n          }\r\n          startHint = hint;\r\n        } else if (hint.align == 'end') {\r\n          if (endHint) {\r\n            throw new MdInputDuplicatedHintError('end');\r\n          }\r\n          endHint = hint;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MdInput,\r\n    MdPlaceholder,\r\n    MdInputContainer,\r\n    MdHint,\r\n    MdTextareaAutosize,\r\n    MdInputDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PlatformModule,\r\n  ],\r\n  exports: [\r\n    MdInput,\r\n    MdPlaceholder,\r\n    MdInputContainer,\r\n    MdHint,\r\n    MdTextareaAutosize,\r\n    MdInputDirective\r\n  ],\r\n})\r\nexport class MdInputModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MdInputModule,\r\n      providers: PlatformModule.forRoot().providers,\r\n    };\r\n  }\r\n}\r\n"]}