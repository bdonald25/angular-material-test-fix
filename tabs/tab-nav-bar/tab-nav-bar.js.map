{"version":3,"file":"tab-nav-bar.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;OAAO,EACL,SAAS,EACT,KAAK,EACL,SAAS,EACT,UAAU,EACV,iBAAiB,EACjB,SAAS,EACT,MAAM,EACP,MAAM,eAAe;OACf,EAAC,QAAQ,EAAC,MAAM,YAAY;OAC5B,EAAC,QAAQ,EAAC,MAAM,0BAA0B;OAC1C,EAAC,aAAa,EAAC,MAAM,4CAA4C;AAExE;;;GAGG;AAWH;IAAA;IAmBA,CAAC;IAbC,oEAAoE;IACpE,sCAAgB,GAAhB,UAAiB,OAAmB;QAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,OAAO,CAAC;QAC7D,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;IACpC,CAAC;IAED,sFAAsF;IACtF,2CAAqB,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YACnE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAdD;QAAC,SAAS,CAAC,QAAQ,CAAC;;gDAAA;IAdtB;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,qCAAqC;YAC/C,WAAW,EAAE,kBAAkB;YAC/B,SAAS,EAAE,CAAC,iBAAiB,CAAC;YAC9B,IAAI,EAAE;gBACJ,yBAAyB,EAAE,MAAM;aAClC;YACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;mBAAA;IAoBF,kBAAC;AAAD,CAAC,AAnBD,IAmBC;AAED;;GAEG;AAOH;IAaE,mBAAoB,YAAyB,EAAU,WAAuB;QAA1D,iBAAY,GAAZ,YAAY,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAY;QAZtE,cAAS,GAAY,KAAK,CAAC;IAY8C,CAAC;IARlF,sBAAI,6BAAM;QAFV,kCAAkC;aAElC,cAAwB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAChD,UAAW,KAAc;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;;;OAN+C;IADhD;QAAC,KAAK,EAAE;;2CAAA;IAVV;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,IAAI,EAAE;gBACJ,sBAAsB,EAAE,MAAM;aAC/B;SACF,CAAC;;iBAAA;IAeF,gBAAC;AAAD,CAAC,AAdD,IAcC;AAED;;;GAGG;AAOH;IAAqC,mCAAQ;IAC3C,yBAAY,UAAsB,EAAE,MAAc,EAAE,KAAoB;QACtE,kBAAM,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IATH;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,IAAI,EAAE;gBACJ,sBAAsB,EAAE,MAAM;aAC/B;SACF,CAAC;;uBAAA;IAMF,sBAAC;AAAD,CAAC,AALD,CAAqC,QAAQ,GAK5C","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  ViewEncapsulation,\r\n  Directive,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {MdInkBar} from '../ink-bar';\r\nimport {MdRipple} from '../../core/ripple/ripple';\r\nimport {ViewportRuler} from '../../core/overlay/position/viewport-ruler';\r\n\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\r\n  templateUrl: 'tab-nav-bar.html',\r\n  styleUrls: ['tab-nav-bar.css'],\r\n  host: {\r\n    '[class.mat-tab-nav-bar]': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MdTabNavBar {\r\n  _activeLinkChanged: boolean;\r\n  _activeLinkElement: ElementRef;\r\n\r\n  @ViewChild(MdInkBar) _inkBar: MdInkBar;\r\n\r\n  /** Notifies the component that the active link has been changed. */\r\n  updateActiveLink(element: ElementRef) {\r\n    this._activeLinkChanged = this._activeLinkElement != element;\r\n    this._activeLinkElement = element;\r\n  }\r\n\r\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\r\n  ngAfterContentChecked(): void {\r\n    if (this._activeLinkChanged) {\r\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\r\n      this._activeLinkChanged = false;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Link inside of a `md-tab-nav-bar`.\r\n */\r\n@Directive({\r\n  selector: '[md-tab-link], [mat-tab-link]',\r\n  host: {\r\n    '[class.mat-tab-link]': 'true',\r\n  }\r\n})\r\nexport class MdTabLink {\r\n  private _isActive: boolean = false;\r\n\r\n  /** Whether the link is active. */\r\n  @Input()\r\n  get active(): boolean { return this._isActive; }\r\n  set active(value: boolean) {\r\n    this._isActive = value;\r\n    if (value) {\r\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\r\n    }\r\n  }\r\n\r\n  constructor(private _mdTabNavBar: MdTabNavBar, private _elementRef: ElementRef) {}\r\n}\r\n\r\n/**\r\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\r\n * adds the ripple behavior to nav bar labels.\r\n */\r\n@Directive({\r\n  selector: '[md-tab-link], [mat-tab-link]',\r\n  host: {\r\n    '[class.mat-tab-link]': 'true',\r\n  },\r\n})\r\nexport class MdTabLinkRipple extends MdRipple {\r\n  constructor(elementRef: ElementRef, ngZone: NgZone, ruler: ViewportRuler) {\r\n    super(elementRef, ngZone, ruler);\r\n  }\r\n\r\n}\r\n"]}