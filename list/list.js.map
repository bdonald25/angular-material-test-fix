{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../src/lib/list/list.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ViewEncapsulation,\r\n    ContentChildren,\r\n    ContentChild,\r\n    QueryList,\r\n    Directive,\r\n    ElementRef,\r\n    Renderer,\r\n    AfterContentInit,\r\n    NgModule,\r\n    ModuleWithProviders,\r\n} from '@angular/core';\r\nimport {MdLine, MdLineSetter, MdLineModule, CompatibilityModule} from '../core';\r\n\r\n@Directive({\r\n  selector: 'md-divider, mat-divider'\r\n})\r\nexport class MdListDivider {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-list, mat-list, md-nav-list, mat-nav-list',\r\n  host: {\r\n    'role': 'list'},\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['list.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdList {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: 'md-list, mat-list',\r\n  host: {\r\n    '[class.mat-list]': 'true'\r\n  }\r\n})\r\nexport class MdListCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: 'md-nav-list, mat-nav-list',\r\n  host: {\r\n    '[class.mat-nav-list]': 'true'\r\n  }\r\n})\r\nexport class MdNavListCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: 'md-divider, mat-divider',\r\n  host: {\r\n    '[class.mat-divider]': 'true'\r\n  }\r\n})\r\nexport class MdDividerCssMatStyler {}\r\n\r\n/* Need directive for a ContentChild query in list-item */\r\n@Directive({\r\n  selector: '[md-list-avatar], [mat-list-avatar]',\r\n  host: {\r\n    '[class.mat-list-avatar]': 'true'\r\n  }\r\n})\r\nexport class MdListAvatarCssMatStyler {}\r\n\r\n/* Need directive to add mat- CSS styling */\r\n@Directive({\r\n  selector: '[md-list-icon], [mat-list-icon]',\r\n  host: {\r\n    '[class.mat-list-icon]': 'true'\r\n  }\r\n})\r\nexport class MdListIconCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: '[md-subheader], [mat-subheader]',\r\n  host: {\r\n    '[class.mat-subheader]': 'true'\r\n  }\r\n})\r\nexport class MdListSubheaderCssMatStyler {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',\r\n  host: {\r\n    'role': 'listitem',\r\n    '(focus)': '_handleFocus()',\r\n    '(blur)': '_handleBlur()',\r\n    '[class.mat-list-item]': 'true',\r\n  },\r\n  templateUrl: 'list-item.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdListItem implements AfterContentInit {\r\n  _hasFocus: boolean = false;\r\n\r\n  private _lineSetter: MdLineSetter;\r\n\r\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\r\n\r\n  @ContentChild(MdListAvatarCssMatStyler)\r\n  set _hasAvatar(avatar: MdListAvatarCssMatStyler) {\r\n    this._renderer.setElementClass(\r\n        this._element.nativeElement, 'mat-list-item-avatar', avatar != null);\r\n  }\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\r\n  }\r\n\r\n  _handleFocus() {\r\n    this._hasFocus = true;\r\n  }\r\n\r\n  _handleBlur() {\r\n    this._hasFocus = false;\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  imports: [MdLineModule, CompatibilityModule],\r\n  exports: [\r\n    MdList,\r\n    MdListItem,\r\n    MdListDivider,\r\n    MdListAvatarCssMatStyler,\r\n    MdLineModule,\r\n    CompatibilityModule,\r\n    MdListIconCssMatStyler,\r\n    MdListCssMatStyler,\r\n    MdNavListCssMatStyler,\r\n    MdDividerCssMatStyler,\r\n    MdListSubheaderCssMatStyler\r\n  ],\r\n  declarations: [\r\n    MdList,\r\n    MdListItem,\r\n    MdListDivider,\r\n    MdListAvatarCssMatStyler,\r\n    MdListIconCssMatStyler,\r\n    MdListCssMatStyler,\r\n    MdNavListCssMatStyler,\r\n    MdDividerCssMatStyler,\r\n    MdListSubheaderCssMatStyler\r\n  ],\r\n})\r\nexport class MdListModule {\r\n  /** @deprecated */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MdListModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}