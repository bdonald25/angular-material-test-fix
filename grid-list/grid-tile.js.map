{"version":3,"file":"grid-tile.js","sourceRoot":"","sources":["../../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Renderer,\r\n  ElementRef,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit, Directive\r\n} from '@angular/core';\r\nimport {MdLine, MdLineSetter} from '../core';\r\nimport {coerceToNumber} from './grid-list-measure';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-grid-tile, mat-grid-tile',\r\n  host: {\r\n    'role': 'listitem',\r\n    '[class.mat-grid-tile]': 'true',\r\n  },\r\n  templateUrl: 'grid-tile.html',\r\n  styleUrls: ['grid-list.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MdGridTile {\r\n  _rowspan: number = 1;\r\n  _colspan: number = 1;\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  /** Amount of rows that the grid tile takes up. */\r\n  @Input()\r\n  get rowspan() { return this._rowspan; }\r\n  set rowspan(value) { this._rowspan = coerceToNumber(value); }\r\n\r\n  /** Amount of columns that the grid tile takes up. */\r\n  @Input()\r\n  get colspan() { return this._colspan; }\r\n  set colspan(value) { this._colspan = coerceToNumber(value); }\r\n\r\n  /**\r\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\r\n   * \"Changed after checked\" errors that would occur with HostBinding.\r\n   */\r\n  _setStyle(property: string, value: string): void {\r\n    this._renderer.setElementStyle(this._element.nativeElement, property, value);\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\r\n  templateUrl: 'grid-tile-text.html'\r\n})\r\nexport class MdGridTileText implements AfterContentInit {\r\n  /**\r\n   *  Helper that watches the number of lines in a text area and sets\r\n   * a class on the host element that matches the line count.\r\n   */\r\n  _lineSetter: MdLineSetter;\r\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\r\n  }\r\n}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: '[md-grid-avatar], [mat-grid-avatar]',\r\n  host: {\r\n    '[class.mat-grid-avatar]': 'true'\r\n  }\r\n})\r\nexport class MdGridAvatarCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: 'md-grid-tile-header, mat-grid-tile-header',\r\n  host: {\r\n    '[class.mat-grid-tile-header]': 'true'\r\n  }\r\n})\r\nexport class MdGridTileHeaderCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n */\r\n@Directive({\r\n  selector: 'md-grid-tile-footer, mat-grid-tile-footer',\r\n  host: {\r\n    '[class.mat-grid-tile-footer]': 'true'\r\n  }\r\n})\r\nexport class MdGridTileFooterCssMatStyler {}\r\n"]}